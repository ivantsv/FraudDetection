services:
  api:
    build:
      context: .
      dockerfile: server/Dockerfile
    command: uvicorn server.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    restart: always

  tests:
    build:
      context: .
      dockerfile: tests/Dockerfile
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379/0

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data
    command: ["redis-server", "--save", "60", "1", "--appendonly", "yes", "--appendfsync", "everysec"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 5s

  ml-service:
      build:
        context: ./ml_service
        dockerfile: Dockerfile
      container_name: ml-service
      ports:
        - "50051:50051"
      environment:
        - MODEL_VERSION=1.0
        - GRPC_PORT=50051
        - MAX_WORKERS=10Ð¸
      restart: always
      healthcheck:
        test: >
          python -c "import grpc; from generated import ml_pb2, ml_pb2_grpc;
          ch = grpc.insecure_channel('localhost:50051');
          stub = ml_pb2_grpc.MLServiceStub(ch);
          resp = stub.HealthCheck(ml_pb2.HealthCheckRequest());
          exit(0 if resp.status == 'healthy' else 1)"
        interval: 30s
        timeout: 5s
        retries: 3
        start_period: 10s

volumes:
  redisdata: